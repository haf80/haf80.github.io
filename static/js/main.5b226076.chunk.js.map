{"version":3,"sources":["utils/history.ts","routes/index.tsx","reportWebVitals.ts","theme.tsx","index.tsx"],"names":["createBrowserHistory","Home","lazy","Codebase","Helpers","Cleancode","IndexRouter","history","fallback","path","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","theme","createTheme","palette","primary","main","secondary","error","red","A400","background","default","ReactDOM","render","ThemeProvider","StrictMode","CssBaseline","document","getElementById"],"mappings":"oLAEeA,gB,OCETC,EAAOC,gBAAK,kBAAM,sDAClBC,EAAWD,gBAAK,kBAAM,gCACtBE,EAAUF,gBAAK,kBAAM,gCACrBG,EAAYH,gBAAK,kBAAM,gCAiBdI,EAfwB,WACrC,OACE,cAAC,IAAD,CAAQC,QAASA,EAAjB,SACE,cAAC,WAAD,CAAUC,SAAU,wCAApB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAWV,IACjC,cAAC,IAAD,CAAOQ,KAAK,YAAYC,OAAK,EAACC,UAAWR,IACzC,cAAC,IAAD,CAAOM,KAAK,cAAcC,OAAK,EAACC,UAAWN,IAC3C,cAAC,IAAD,CAAOI,KAAK,WAAWC,OAAK,EAACC,UAAWP,YCHnCQ,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,iCCaCQ,EAjBDC,YAAY,CACxBC,QAAS,CACPC,QAAS,CACPC,KAAM,WAERC,UAAW,CACTD,KAAM,WAERE,MAAO,CACLF,KAAMG,IAAIC,MAEZC,WAAY,CACVC,QAAS,W,QCTfC,IAASC,OACP,cAACC,EAAA,EAAD,CAAeb,MAAOA,EAAtB,SACE,eAAC,IAAMc,WAAP,WACE,cAACC,EAAA,EAAD,IACA,cAAC,EAAD,SAGJC,SAASC,eAAe,SAM1B1B,M","file":"static/js/main.5b226076.chunk.js","sourcesContent":["import { createBrowserHistory } from \"history\";\n\nexport default createBrowserHistory();","import React, { ReactElement, Suspense, lazy, FunctionComponent } from \"react\";\nimport { Router, Route, Switch } from \"react-router-dom\";\nimport history from \"../utils/history\";\n\nconst Home = lazy(() => import(\"../views/home\"));\nconst Codebase = lazy(() => import(\"../views/codebase\"));\nconst Helpers = lazy(() => import(\"../views/helpers\"));\nconst Cleancode = lazy(() => import(\"../views/cleancode\"));\n\nconst IndexRouter: FunctionComponent = (): ReactElement => {\n  return (\n    <Router history={history}>\n      <Suspense fallback={<p>Loading</p>}>\n        <Switch>\n          <Route path=\"/\" exact component={Home}></Route>\n          <Route path=\"/codebase\" exact component={Codebase}></Route>\n          <Route path=\"/clean-code\" exact component={Cleancode}></Route>\n          <Route path=\"/helpers\" exact component={Helpers}></Route>\n        </Switch>\n      </Suspense>\n    </Router>\n  );\n};\n\nexport default IndexRouter;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport red from \"@material-ui/core/colors/red\";\nimport { createTheme } from \"@material-ui/core/styles\";\n\n// A custom theme for this app\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: \"#556cd6\",\n    },\n    secondary: {\n      main: \"#19857b\",\n    },\n    error: {\n      main: red.A400,\n    },\n    background: {\n      default: \"#fff\",\n    },\n  },\n});\n\nexport default theme;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./routes/index\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { ThemeProvider } from \"@material-ui/core/styles\";\nimport theme from \"./theme\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <React.StrictMode>\n      <CssBaseline />\n      <App />\n    </React.StrictMode>\n  </ThemeProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}